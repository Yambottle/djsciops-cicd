name: u24_element_release
on:
  workflow_call:
    inputs:
      py_ver:
        type: string
        required: true
      twine_repo:
        type: string
    secrets:
      TWINE_USERNAME:
        required: true
      TWINE_PASSWORD:
        required: true
jobs:
  test-publish-release:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
    steps:
      - name: Checkout element repo
        uses: actions/checkout@v2
      - name: Checkout cicd repo
        uses: actions/checkout@v2
        with:
          repository: 'yambottle/djsciops-cicd'
          path: 'cicd'
      - name: Determine package version
        run: |
          PKG_NAME=$(python3 -c "print([p for p in __import__('setuptools').find_packages() if '.' not in p][0])")
          SDIST_PKG_NAME=$(echo ${PKG_NAME} | sed 's|_|-|g')
          PKG_VERSION=$(cat ${PKG_NAME}/version.py | grep -oP '\d+\.\d+\.[a-z0-9]+')
          echo "PKG_NAME=${PKG_NAME}" >> $GITHUB_ENV
          echo "PKG_VERSION=${PKG_VERSION}" >> $GITHUB_ENV
          echo "SDIST_PKG_NAME=${SDIST_PKG_NAME}" >> $GITHUB_ENV
      - name: Get changelog entry
        id: changelog_reader
        uses: guzman-raphael/changelog-reader-action@v5
        with:
          path: ./CHANGELOG.md
          version: ${{env.PKG_VERSION}}
      - name: Create draft GH release
        id: create_draft_gh_release
        uses: actions/create-release@v1
        if: ${{ contains(inputs.twine_repo, 'testpypi') }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.changelog_reader.outputs.version}}
          release_name: Release ${{steps.changelog_reader.outputs.version}}
          body: ${{steps.changelog_reader.outputs.changes}}
          prerelease: ${{steps.changelog_reader.outputs.status == 'prereleased'}}
          draft: true
      - name: Create GH release
        id: create_gh_release
        uses: actions/create-release@v1
        if: ${{ !contains(inputs.twine_repo, 'testpypi') }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.changelog_reader.outputs.version}}
          release_name: Release ${{steps.changelog_reader.outputs.version}}
          body: ${{steps.changelog_reader.outputs.changes}}
          prerelease: ${{steps.changelog_reader.outputs.status == 'prereleased'}}
          draft: ${{steps.changelog_reader.outputs.status == 'unreleased'}}
      - name: Get release upload url
        id: get_release_upload_url
        run: |
          if [ "${{inputs.twine_repo}}" -eq "testpypi" ]
          then
            echo "::set-output name=upload_url::${{steps.create_draft_gh_release.upload_url}}"
          else
            echo "::set-output name=upload_url::${{steps.create_gh_release.upload_url}}"
          fi
      - name: Fetch image artifact
        uses: actions/download-artifact@v2
        with:
          name: image-${{env.PKG_NAME}}-${{env.PKG_VERSION}}-py${{inputs.py_ver}}
      - name: Fetch pip artifacts
        uses: actions/download-artifact@v2
        with:
          name: pip-${{env.PKG_NAME}}-${{env.PKG_VERSION}}
          path: dist
      - name: Publish pip release
        run: |
          cp -r ./cicd/docker-template/element_build_release/dist/alpine/* .
          export HOST_UID=$(id -u)
          docker load < "image-${{env.PKG_NAME}}-${PKG_VERSION}-py${{inputs.py_ver}}.tar.gz"
          docker-compose -f docker-compose-build.yaml run \
            -e TWINE_USERNAME=${TWINE_USERNAME} -e TWINE_PASSWORD=${TWINE_PASSWORD} element \
            sh -lc "pip install twine && python -m twine upload --repository ${{inputs.twine_repo}} dist/*"
      - name: Determine pip artifact paths
        run: |
          echo "PKG_WHEEL_PATH=$(ls dist/${PKG_NAME}-*.whl)" >> $GITHUB_ENV
          echo "PKG_SDIST_PATH=$(ls dist/${SDIST_PKG_NAME}-*.tar.gz)" >> $GITHUB_ENV
      - name: Upload pip wheel asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.get_release_upload_url.outputs.upload_url}}
          asset_path: ${{env.PKG_WHEEL_PATH}}
          asset_name: pip-${{env.PKG_NAME}}-${{env.PKG_VERSION}}.whl
          asset_content_type: application/zip
      - name: Upload pip sdist asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.get_release_upload_url.outputs.upload_url}}
          asset_path: ${{env.PKG_SDIST_PATH}}
          asset_name: pip-${{env.SDIST_PKG_NAME}}-${{env.PKG_VERSION}}.tar.gz
          asset_content_type: application/gzip
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        with:
          threshold: 7d
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
