# Build Docs for GitHub Pages
name: mkdocs-build
on:
  workflow_call:
    inputs:
      new_tag:
        description: "New tag with the 'v' prefix"
        required: true
        type: string
      branch_name:
        description: "New branch name"
        required: false
        type: string
        default: gh-pages
      py_ver:
        description: "which python version to use, e.g., '3.9'"
        required: false
        type: string
        default: "3.9"
      release_branch:
        description: "The originating branch that is allowed to trigger the docs build process"
        default: main
        type: string
        required: false

jobs:
  get_last_pushed_tag:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️  Checkout repository
        id: check-repo
        uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
          echo "LAST_TAG="$(git describe --tags --abbrev=0 2>/dev/null)"" >>$GITHUB_ENV
    outputs:
      tag: ${{ env.LAST_TAG }}

  build_gh_pages:
    needs: [get_last_pushed_tag]
    if: |
      always() &&
      (needs.get_last_pushed_tag.result == 'success') &&
      (github.ref_name == '${{inputs.release_branch}}')
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️  Checkout repository
        id: check-repo
        uses: actions/checkout@v3

      - name: 🌳  Create 'gh-pages' branch
        id: create-new-branch
        shell: bash
        run: |
          branch_exists=$(git ls-remote --heads origin ${{ inputs.branch_name }})

          if [[ -z ${branch_exists} ]]; then
            echo "Creating the branch '${{ inputs.branch_name }}'"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git checkout --orphan ${{ inputs.branch_name }}
            git reset --hard
            git commit --allow-empty -m "ci(bot): initializing branch"
            git push origin ${{ inputs.branch_name }}
            echo "Finished creating the branch '${{ inputs.branch_name }}'"
          else
            echo "Branch '${{ inputs.branch_name }}' already exists"
          fi

      - name: 🛎️  Checkout pages branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch_name }}

      - name: Check if 'index.html' exists
        run: |
          if [ -f "index.html" ]; then
            echo "DOCS_ARG=" >> $GITHUB_ENV
          else
            echo "DOCS_ARG=--index_html" >> $GITHUB_ENV
          fi

      - name: 🛎️  Checkout repository
        id: check-repo-again
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🐍  Use Python
        id: use-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.py_ver }}

      - name: 🐍  Install Nox
        id: install-nox
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: 📖  Build docs and deploy to gh-pages
        id: mkdocs-build-nox
        run: nox --non-interactive -v -s docs -- --version ${{ inputs.new_tag }} ${{ env.DOCS_ARG }}
