# Create a Tag and Release Action
name: tag-and-release
author: Joseph Burling
description: "Create a tag and a new release."

inputs:
  github_token:
    description: "GitHub token"
    required: true

  new_tag:
    description: "New tag with 'v' prefix"
    required: true

  new_version:
    description: "New version without the prefix"
    required: true

  previous_tag:
    description: "Previous tag with 'v' prefix"
    required: false
    default: "unknown"

  previous_version:
    description: "Previous version without the prefix"
    required: false
    default: "unknown"

  release_type:
    description: "Release type for new version"
    required: true

  create_release:
    description: "Create a new release"
    default: "true"
    required: false

  release_only:
    description: "List of single-quoted, comma separated values of release types, e.g., ['major','minor']"
    default: "['major','minor','patch']"
    required: false

  changelog:
    description: "Changelog generated from commits"
    default: "."
    required: false

runs:
  using: composite
  steps:
    - name: üè∑Ô∏è  Create and push a new semver tag
      id: push-new-tag
      shell: bash
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git tag -a ${{ inputs.new_tag }} --force -m "ci(versioning): tagging ${{ inputs.new_tag }}:${{ inputs.release_type }}"
        git push origin --tags

    - name: üì¶  Create a new release from semver tag
      id: release-version
      if: |
        always() &&
        (inputs.create_release == 'true') &&
        (!contains('pre', ${{ inputs.release_type }})) &&
        (contains(fromJSON(${{ inputs.release_only }}), ${{ inputs.release_type }}))
      uses: ncipollo/release-action@v1
      with:
        token: ${{ inputs.github_token }}
        tag: ${{ inputs.new_tag }}
        name: ${{ inputs.release_type }} release ${{ inputs.new_version }}
        body: ${{ inputs.changelog }}
        allowUpdates: true
        generateReleaseNotes: true

outputs:
  id:
    description: "The identifier of the created release"
    value: ${{ steps.release-version.outputs.id }}
  html_url:
    description: "The HTML URL of the release"
    value: ${{ steps.release-version.outputs.html_url }}
  upload_url:
    description: "The URL for uploading assets to the release"
    value: ${{ steps.release-version.outputs.upload_url }}

branding:
  icon: "aperture"
  color: "blue"
#
